dijkstra算法：
 
参考的是下面的网址
https://www.cnblogs.com/goldsunshine/p/12978305.html

说明： 上面的网址描述的很清楚，算法也很清楚，但个人觉得，一般人还是需要思考下，这样的算法是怎么来的，正确吗, 用在什么地方呢，所以写了下面的文档，供参考。

需要思考的问题：
1 如果有相等的路径，节点最少的，最多的都怎么求？

	答： 需要保存路径，如果相等的时候，取需要的路径

2 计算中，有相等的值，取第一个？最后一个，还是随机一个，有影响吗？

	答： 对结果没有影响的。证明看下面的思考。

3 通过这个算法，有哪些可得的结论呢

	答：
	3.1 直达的不一定是最短的。
	3.2 从s点，必须经过Xn，可能不可达，否则必有最短路径。
	3.3 从s点，到e点，可能不可达，否则必有最短路径。

4  初始化起始点s后是什么状态呢？

	答： 起始点到自己是0，其他的是初始化的距离。有直连的就是那个直连距离（不一定是最短的哦），无直连的设置成最大值Max
	起始点到自己为0，肯定是最短的了，其他的不一定。 

5 怎么证明dijkstra 算法是准确的呢？ 

答: 下面是真对问题5，自己思考的一些过程
	5.1 ----为什么第一步选到x1，一定是最短的路径？ 还能得出什么结论？
	因为选的就是最短的啊，从起点s到第一目标点x1，如果还有其他点到目标点，和有这个最短的是矛盾的,
	比如有一个其它点x2，那肯定最少是s->x2->x1,但是s->x2 》 s->x1, 所以此时就是从起点s到x1的最短距离了，其他的不一定，需要后续步骤 。
	需要更新通过x1到其它点，取小值，获取可能需要经过x1点到其它点的新值，是最小的吗？ 
	不一定， 需要比较，取较小值。
	还能得出：
	s->x2,.... s->xn    >=   s->x1
	
	5.2  --- 第二步选到x2后，后计算完，得出了什么结论，是到第二个点的最短距离吗？为什么？
	肯定是从s->x2的最小值，
	因为只有3种可能，
	1直达， 
	2 经过x1，也就是s-》x1->x2,这个已经计算过了，
	上面2种，已经在前2种解决了。
	3 不经过x1，但这是冲突的，因为假如有x3，路线至少为s-》x3.。。-》x2，  s->s3 肯定》s->s2, 因为s2就是选出来最小的。所以此时的s-》x2就是最短的。

	5.3 ---- 第二步选到Xn后，后计算完，得出了什么结论，是到第n个点的最短距离吗？为什么？
	注意：选到n时，n代表的是此时s->....->Xn的距离，包括了直连和可能的n-1个点的组合。也就是比它距离短的组合。
	所有，比他短的都处理了，此后要选的点，S->n+1..... 肯定都> S->Xn, 所以此时Xn就是 S->Xn的最短距离

结论： 从S点到一个目标点，如果有更短的，只有从比它自己短的里面挑选，因为都已经挑选过了，所以选中某点的时候，它本身就是最短点。